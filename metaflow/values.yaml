# Default values for metaflow.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Database block for configuring the Kubegress CRD
db:

  # The total number of replicas you want, the first 
  # replica will be a primary and the rest will be 
  # secondary.
  replicas: 3

  # Postgres-compatible image you want to deploy.
  image: postgres:14.5

  # Port to make the Databases available on.
  port: 5432

  # Size to make each database.
  size: 50Mi

  # Name of the StorageClass object you want to use.
  storageClassName: standard

  # Where to mount the persistent volumes
  volumeMount: /var/lib/postgres/data

  # If true the primary and replica pods will not attempt 
  # to failover and fix themselves. 
  failoverEnabled: true

  # The name of a replica pod you would like to promote as
  # the primary.
  promotePodToPrimary: ""

  # The name of a configMap you want to use to define
  # defaults for your postgres databases. 
  # See Kubegres Docs for information on how to implement
  # custom init and backup scripts: 
  # https://www.kubegres.io/doc/override-default-configs.html
  customConfigMap: ""

  backupEnabled: true
  # Backup settings
  backup:
    # true if you want to enable backups to a persistent volume
    # claim
    enabled: true

    # cron schedule to backup on.
    schedule: "0 0 1 */1 *"

    # false if you want to use an existing PVC, true if you want
    # to create a new PVC now.
    createPvc: true
    
    # set this if you are using an existing PVC. If createPvc is
    # true then leave this blank.
    backupPvcName: ""

    # Where on the backup PVC you want to store the backup.
    backupVolumeMount: "/var/lib/backup"

  secrets:
    # true if you want to create randomly generated secrets
    createSecrets: true

    # If you have database secrets already created for your
    # primary and replica databases, set the below values.

    # The secret name and key for the primary database.
    customSuperUserSecretName: ""
    customSuperUserSecretValue: ""

    # The secret name and key for the replica database(s).
    customReplicaUserSecretName: ""
    customReplicaUserSecretValue: ""
    
  # Any custom environmentVariables you want injected into 
  # your db containers.
  environmentVariables:
    - name: custom-env-var
      value: env-var-value


replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# Secret that contains credentials needed to auth
# into your private image registry.
imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
